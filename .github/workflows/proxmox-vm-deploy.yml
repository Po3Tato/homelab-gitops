name: Proxmox VM Deploy

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy (prod, prod-proxy)'
        required: true
        type: choice
        options:
          - prod
          - prod-proxy
      action:
        description: 'OpenTofu action'
        required: true
        type: choice
        options:
          - plan
          - apply
          - destroy
      auto_approve:
        description: 'Auto approve apply/destroy'
        required: false
        type: boolean
        default: false
      override_template_id:
        description: 'Override template VM ID for cloning (optional)'
        required: false
        type: string
      override_node:
        description: 'Override target node for all VMs (optional)'
        required: false
        type: choice
        options:
          - ''
          - '1'
          - '2'
          - '3'
        default: ''

env:
  TERRAFORM_VERSION: '1.10.5'

jobs:
  deploy-vms:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TERRAFORM_VERSION }}

      - name: Setup Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:infra-ci
          use-cache: 'true'

      - name: Configure Proxmox credentials
        run: |
          echo "TF_VAR_virtual_environment_endpoint=${{ secrets.PROXMOX_API_URL }}" >> $GITHUB_ENV
          echo "TF_VAR_virtual_environment_api_token=${{ secrets.PROXMOX_API_TOKEN }}" >> $GITHUB_ENV
          
      - name: Configure template override
        if: ${{ github.event.inputs.override_template_id != '' }}
        run: |
          echo "TF_VAR_override_template_id=${{ github.event.inputs.override_template_id }}" >> $GITHUB_ENV
          
      - name: Configure node override
        if: ${{ github.event.inputs.override_node != '' }}
        run: |
          case "${{ github.event.inputs.override_node }}" in
            "1")
              echo "TF_VAR_override_node_name=${{ secrets.PROXMOX_NODE_1 }}" >> $GITHUB_ENV
              ;;
            "2")
              echo "TF_VAR_override_node_name=${{ secrets.PROXMOX_NODE_2 }}" >> $GITHUB_ENV
              ;;
            "3")
              echo "TF_VAR_override_node_name=${{ secrets.PROXMOX_NODE_3 }}" >> $GITHUB_ENV
              ;;
          esac
      
      - name: Configure backend
        working-directory: infra/proxmox/${{ github.event.inputs.environment }}
        run: |
          cat > backend.tf << 'EOF'
          terraform {
            backend "s3" {
              bucket = "${{ secrets.B2_BUCKET_NAME }}"
              key    = "proxmox/${{ github.event.inputs.environment }}/terraform.tfstate"
              region = "${{ secrets.B2_REGION }}"
              endpoint = "${{ secrets.B2_URL }}"
              skip_credentials_validation = true
              skip_region_validation = true
              skip_metadata_api_check = true
            }
          }
          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Initialize Terraform
        working-directory: infra/proxmox/${{ github.event.inputs.environment }}
        run: tofu init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Terraform Plan
        if: github.event.inputs.action == 'plan'
        working-directory: infra/proxmox/${{ github.event.inputs.environment }}
        run: |
          tofu plan -var-file=terraform.tfvars -out=tfplan
          tofu show -no-color tfplan > plan.txt
          
          # Post plan as PR comment if this is from a PR
          if [ -n "${{ github.event.pull_request.number }}" ]; then
            echo "```terraform" > plan_comment.txt
            cat plan.txt >> plan_comment.txt
            echo "```" >> plan_comment.txt
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Terraform Apply
        if: github.event.inputs.action == 'apply'
        working-directory: infra/proxmox/${{ github.event.inputs.environment }}
        run: |
          if [ "${{ github.event.inputs.auto_approve }}" = "true" ]; then
            tofu apply -var-file=terraform.tfvars -auto-approve
          else
            tofu plan -var-file=terraform.tfvars -out=tfplan
            tofu apply tfplan
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Terraform Destroy
        if: github.event.inputs.action == 'destroy'
        working-directory: infra/proxmox/${{ github.event.inputs.environment }}
        run: |
          if [ "${{ github.event.inputs.auto_approve }}" = "true" ]; then
            tofu destroy -var-file=terraform.tfvars -auto-approve
          else
            echo "⚠️  Destroy requires auto_approve to be checked for safety"
            exit 1
          fi
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Generate Ansible inventory
        if: github.event.inputs.action == 'apply'
        working-directory: infra/proxmox/${{ github.event.inputs.environment }}
        run: |
          tofu output -json > outputs.json
          
          echo "✅ Infrastructure deployed. Update Ansible inventory with new IPs if needed."
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: terraform-${{ github.event.inputs.environment }}-${{ github.event.inputs.action }}
          path: |
            infra/proxmox/${{ github.event.inputs.environment }}/tfplan
            infra/proxmox/${{ github.event.inputs.environment }}/plan.txt
            infra/proxmox/${{ github.event.inputs.environment }}/outputs.json