name: Proxmox Template Create

on:
  workflow_dispatch:
    inputs:
      template_name:
        description: 'Template name'
        required: true
        type: string
      cloud_image_url:
        description: 'Cloud image URL'
        required: true
        type: string
        default: 'https://cloud-images.ubuntu.com/noble/current/noble-server-cloudimg-amd64.img'
      proxmox_node:
        description: 'Target Proxmox node'
        required: true
        type: choice
        options:
          - '1'
          - '2' 
          - '3'
        default: '1'

env:
  TERRAFORM_VERSION: '1.10.5'

jobs:
  create-template:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup OpenTofu
        uses: opentofu/setup-opentofu@v1
        with:
          tofu_version: ${{ env.TERRAFORM_VERSION }}

      - name: Setup Tailscale
        uses: tailscale/github-action@v2
        with:
          oauth-client-id: ${{ secrets.TAILSCALE_OAUTH_CLIENT_ID }}
          oauth-secret: ${{ secrets.TAILSCALE_OAUTH_SECRET }}
          tags: tag:infra-ci

      - name: Configure Tailscale exit node
        run: |
          sudo tailscale up --accept-routes --advertise-tags=tag:infra-ci --hostname=github-${{ github.run_id }}

      - name: Test Proxmox connectivity
        run: |
          echo "Testing connectivity to Proxmox host..."
          curl -k -s --connect-timeout 10 ${{ secrets.PROXMOX_API_URL }} || { echo "Connection failed"; exit 1; }
          
      - name: Configure Proxmox credentials and variables
        run: |
          echo "TF_VAR_virtual_environment_endpoint=${{ secrets.PROXMOX_API_URL }}" >> $GITHUB_ENV
          echo "TF_VAR_virtual_environment_api_token=${{ secrets.PROXMOX_API_TOKEN }}" >> $GITHUB_ENV
          echo "TF_VAR_template_name=${{ inputs.template_name }}" >> $GITHUB_ENV
          echo "TF_VAR_cloud_image_url=${{ inputs.cloud_image_url }}" >> $GITHUB_ENV
          
          # Set node and VM ID based on selection
          case "${{ inputs.proxmox_node }}" in
            "1")
              echo "TF_VAR_proxmox_node=${{ secrets.PROXMOX_NODE_1 }}" >> $GITHUB_ENV
              echo "TF_VAR_vm_id=${{ secrets.PROXMOX_TEMPLATE_VM_ID_1 }}" >> $GITHUB_ENV
              ;;
            "2")
              echo "TF_VAR_proxmox_node=${{ secrets.PROXMOX_NODE_2 }}" >> $GITHUB_ENV
              echo "TF_VAR_vm_id=${{ secrets.PROXMOX_TEMPLATE_VM_ID_2 }}" >> $GITHUB_ENV
              ;;
            "3")
              echo "TF_VAR_proxmox_node=${{ secrets.PROXMOX_NODE_3 }}" >> $GITHUB_ENV
              echo "TF_VAR_vm_id=${{ secrets.PROXMOX_TEMPLATE_VM_ID_3 }}" >> $GITHUB_ENV
              ;;
          esac

      - name: Create templates directory
        run: mkdir -p infra/proxmox/templates

      - name: Configure Backblaze backend
        run: |
          cat > infra/proxmox/templates/backend.tf <<EOF
          terraform {
            backend "s3" {
              bucket = "${{ secrets.B2_BUCKET_NAME }}"
              key    = "proxmox/templates/${{ inputs.template_name }}.tfstate"
              region = "${{ secrets.B2_REGION }}"
              endpoint = "${{ secrets.B2_URL }}"
              skip_credentials_validation = true
              skip_metadata_api_check     = true
              skip_region_validation      = true
            }
          }
          EOF
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Initialize OpenTofu
        working-directory: infra/proxmox/templates
        run: tofu init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Plan template creation
        working-directory: infra/proxmox/templates
        run: tofu plan -out=tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Apply template creation
        working-directory: infra/proxmox/templates
        run: tofu apply tfplan
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}

      - name: Output template details
        working-directory: infra/proxmox/templates
        run: |
          echo "Template created successfully!"
          tofu output -json > template-details.json
          cat template-details.json
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.B2_APPLICATION_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.B2_APPLICATION_KEY }}