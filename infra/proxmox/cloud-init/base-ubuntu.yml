#cloud-config
hostname: ${hostname}
fqdn: ${hostname}.${domain}
manage_etc_hosts: true

users:
  - name: ubuntu
    groups: sudo
    shell: /bin/bash
    sudo: ALL=(ALL) NOPASSWD:ALL
    ssh_authorized_keys:
      - ${ssh_public_key}

packages:
  - qemu-guest-agent
  - curl
  - wget
  - vim
  - ca-certificates
  - gnupg
  - lsb-release
  - apt-transport-https
  - ufw

package_update: true
package_upgrade: true

write_files:
  - path: /opt/setup-tailscale.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e
      
      # Install Tailscale with retry logic
      if ! command -v tailscale &> /dev/null; then
          echo "Installing Tailscale..."
          for i in {1..3}; do
              if curl -fsSL https://tailscale.com/install.sh | sh > /dev/null 2>&1; then
                  echo "Tailscale installed successfully"
                  break
              else
                  echo "Tailscale install attempt $i failed, retrying..."
                  sleep 5
              fi
          done
      fi
      
      # Enable and start Tailscale
      systemctl enable tailscaled > /dev/null 2>&1
      systemctl start tailscaled > /dev/null 2>&1
      
      # Connect to Tailscale with retry logic
      if [ -n "${tailscale_authkey}" ]; then
        if ! tailscale status &> /dev/null; then
            echo "Connecting to Tailscale..."
            for i in {1..3}; do
                if tailscale up --authkey=${tailscale_authkey} --hostname=${hostname} --ssh > /dev/null 2>&1; then
                    echo "Tailscale connected successfully"
                    break
                else
                    echo "Tailscale connection attempt $i failed, retrying..."
                    sleep 10
                fi
            done
        fi
      fi

  - path: /opt/setup-docker.sh
    permissions: '0755'
    content: |
      #!/bin/bash
      set -e
      
      # Install Docker
      curl -fsSL https://get.docker.com | sh
      
      # Add ubuntu user to docker group
      usermod -aG docker ubuntu
      
      # Enable and start Docker
      systemctl enable docker
      systemctl start docker
      
      # Install Docker Compose
      curl -L "https://github.com/docker/compose/releases/latest/download/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
      chmod +x /usr/local/bin/docker-compose

  - path: /etc/update-motd.d/10-custom-motd
    permissions: '0755'
    content: |
      #!/bin/bash
      # Robust system information gathering with error handling
      HOSTNAME=$(hostname 2>/dev/null || echo "Unknown")
      KERNEL=$(uname -r 2>/dev/null || echo "Unknown")
      UPTIME=$(uptime -p 2>/dev/null || echo "Unknown")
      LOAD=$(cat /proc/loadavg 2>/dev/null | awk '{print $1 ", " $2 ", " $3}' || echo "Unknown")
      MEMORY=$(free -h 2>/dev/null | grep "Mem:" | awk '{print $3 "/" $2}' || echo "Unknown")
      DISK=$(df -h / 2>/dev/null | awk 'NR==2 {print $3 "/" $2 " (" $5 ")"}' || echo "Unknown")
      USERS=$(who 2>/dev/null | wc -l || echo "0")
      INTERNAL_IP=$(ip -4 addr show 2>/dev/null | grep -oP '(?<=inet\s)\d+(\.\d+){3}' | grep -v "127.0.0.1" | head -n 1 || echo "Unknown")
      TAILSCALE_IP=$(tailscale ip -4 2>/dev/null || echo "Not connected")
      DATA_DISKS=""
      if [ -d "/data" ]; then
        DATA_DISKS=$(df -h 2>/dev/null | grep "/data" | awk '{printf "%s: %s/%s (%s)\n", $6, $3, $2, $5}' || echo "")
      fi
      cat << 'EOF'

           __  __                   
          |  \/  |_   _ ___  ___   
          | |\/| | | | / __|/ _ \  
          | |  | | |_| \__ \ (_) | 
          |_|  |_|\__,_|___/\___/  
                                   
           ___             ____                    
          / _ \ _ __       |  _ \ _ __ ___ _ __ ___  
         | | | | '_ \ _____| |_) | '__/ _ \ '_ ` _ \ 
         | |_| | | | |_____|  __/| | |  __/ | | | | |
          \___/|_| |_|     |_|   |_|  \___|_| |_| |_|

      EOF
      echo "Welcome to ONPREM-$HOSTNAME"
      echo "Managed by Muso"
      echo "─────────────────────────────────────────────────────"
      echo "🖥️  System Information:"
      echo " ⚙️  Kernel: $KERNEL"
      echo " ⏰ Uptime: $UPTIME"
      echo " 📊 Load: $LOAD"
      echo " 🧠 Memory: $MEMORY"
      echo " 💾 Disk Usage: $DISK"
      echo " 🌐 Internal IP: $INTERNAL_IP"
      echo " 🔒 Tailscale IP: $TAILSCALE_IP"
      echo " 👥 Users: $USERS active"
      if [ ! -z "$DATA_DISKS" ]; then
        echo " 📂 Data Disks:"
        echo "$DATA_DISKS" | sed 's/^/   /'
      fi
      echo "─────────────────────────────────────────────────────"
      echo "⚠️  ATTENTION: THIS SYSTEM IS FOR AUTHORIZED USERS ONLY ⚠️ "

runcmd:
  - sysctl --system
  - modprobe overlay
  - modprobe br_netfilter

  - systemctl enable qemu-guest-agent
  - systemctl start qemu-guest-agent
  
  # Configure firewall
  - ufw default deny incoming
  - ufw default allow outgoing
  - ufw allow ssh
  - ufw allow 41641/udp  # Tailscale
  - ufw --force enable
  
  # Configure custom MOTD setup
  - touch /etc/motd
  - rm -f /etc/update-motd.d/00-header
  - rm -f /etc/update-motd.d/10-help-text
  - rm -f /etc/update-motd.d/50-landscape-sysinfo
  - rm -f /etc/update-motd.d/50-motd-news
  - rm -f /etc/update-motd.d/60-unminimize
  - rm -f /etc/update-motd.d/85-fwupd
  - rm -f /etc/update-motd.d/88-esm-announce
  - rm -f /etc/update-motd.d/91-contract-ua-esm-status
  - rm -f /etc/update-motd.d/91-release-upgrade
  - rm -f /etc/update-motd.d/95-hwe-eol
  - systemctl restart systemd-update-motd > /dev/null 2>&1

  - '[ "${install_tailscale}" = "true" ] && /opt/setup-tailscale.sh || true'
  - '[ "${install_docker}" = "true" ] && /opt/setup-docker.sh || true'

  - echo "Cloud-init completed at $(date)" > /var/log/cloud-init-done.log

power_state:
  mode: reboot
  timeout: 30
  condition: true